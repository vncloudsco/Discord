System.ArgumentException: L'élément a déjà été ajouté. Clé du dictionnaire : 'IPackage {7}p'  Clé ajoutée : 'IPackage {7}p'
   à System.Collections.Hashtable.Insert(Object key, Object nvalue, Boolean add)
   à Reflector.CodeModel.Visitor.Cloner.TransformVariableDeclaration(IVariableDeclaration value)
   à Reflector.CodeModel.Visitor.Transformer.TransformVariableDeclarationCollection(IVariableDeclarationCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformLambdaExpression(ILambdaExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Cloner.TransformAssignExpression(IAssignExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Cloner.TransformNullCoalescingExpression(INullCoalescingExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpressionCollection(ExpressionCollection expressions)
   à Reflector.CodeModel.Visitor.Cloner.TransformMethodInvokeExpression(IMethodInvokeExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpressionCollection(ExpressionCollection expressions)
   à Reflector.CodeModel.Visitor.Cloner.TransformMethodInvokeExpression(IMethodInvokeExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpressionCollection(ExpressionCollection expressions)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockExpression(IBlockExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Cloner.TransformArrayCreateExpression(IArrayCreateExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Cloner.TransformAssignExpression(IAssignExpression value)
   à Reflector.CodeModel.Visitor.Transformer.TransformExpression(IExpression value)
   à Reflector.CodeModel.Visitor.Cloner.TransformExpressionStatement(IExpressionStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformConditionStatement(IConditionStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformConditionStatement(IConditionStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformConditionStatement(IConditionStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformConditionStatement(IConditionStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformWhileStatement(IWhileStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformUsingStatement(IUsingStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.CodeModel.Visitor.Cloner.TransformConditionStatement(IConditionStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatement(IStatement value)
   à Reflector.CodeModel.Visitor.Transformer.TransformStatementCollection(StatementCollection value)
   à Reflector.CodeModel.Visitor.Cloner.TransformBlockStatement(IBlockStatement value)
   à Reflector.Disassembler.Optimizer.TransformMethodDeclaration(IMethodDeclaration value)
   à Reflector.Disassembler.Disassembler.TransformMethodDeclaration(IMethodDeclaration value)
   à Reflector.CodeModel.Visitor.Transformer.TransformMethodDeclarationCollection(IMethodDeclarationCollection methods)
   à Reflector.Disassembler.Disassembler.TransformTypeDeclaration(ITypeDeclaration value)
   à Reflector.Application.Translator.TranslateTypeDeclaration(ITypeDeclaration value, Boolean memberDeclarationList, Boolean methodDeclarationBody)
   à Reflector.Application.FileDisassembler.WriteTypeDeclaration(ITypeDeclaration typeDeclaration, String sourceFile, ILanguageWriterConfiguration languageWriterConfiguration)
namespace NuGet
{
}

